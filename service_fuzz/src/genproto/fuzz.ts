// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v5.26.1
// source: fuzz.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { PingRequest, PongResponse } from "./buzz";

export const protobufPackage = "";

export type FuzzServiceService = typeof FuzzServiceService;
export const FuzzServiceService = {
  ping: {
    path: "/FuzzService/Ping",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: PingRequest) => Buffer.from(PingRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => PingRequest.decode(value),
    responseSerialize: (value: PongResponse) => Buffer.from(PongResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => PongResponse.decode(value),
  },
} as const;

export interface FuzzServiceServer extends UntypedServiceImplementation {
  ping: handleUnaryCall<PingRequest, PongResponse>;
}

export interface FuzzServiceClient extends Client {
  ping(request: PingRequest, callback: (error: ServiceError | null, response: PongResponse) => void): ClientUnaryCall;
  ping(
    request: PingRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: PongResponse) => void,
  ): ClientUnaryCall;
  ping(
    request: PingRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: PongResponse) => void,
  ): ClientUnaryCall;
}

export const FuzzServiceClient = makeGenericClientConstructor(FuzzServiceService, "FuzzService") as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): FuzzServiceClient;
  service: typeof FuzzServiceService;
  serviceName: string;
};
